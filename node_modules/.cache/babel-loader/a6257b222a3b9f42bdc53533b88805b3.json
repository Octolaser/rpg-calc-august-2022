{"ast":null,"code":"var _jsxFileName = \"/Users/Agent1/Desktop/rpg-calculator/src/Container/Pages/DiceRoller.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport LargeDiceDisplay from \"../../Componets/DiceDisplay\";\nimport RollButton from \"../../Buttons/DiceButtons/RollButtons\";\nimport RollInfoDisplay from \"../../Componets/RollInfoDisplay\";\nimport diceRollResults from \"../../Logic/diceRollResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rollAnimation = keyframes`\n 0%\n  {\n    transform: rotate(0deg);\n  }\n  25%\n  {\n    transform: rotate(45deg);\n  }\n  50%\n  {\n    transform: rotate(-110deg)\n  }\n  75%\n  {\n    transform: rotate(120deg);\n  }\n  100%\n  {\n    transform: rotate(0deg);\n  }\n`;\nconst Container = styled.div`\n  overflow-y: scroll;\n`;\n_c = Container;\nconst RollDisplayContainer = styled.div`\n  height: 280px;\n  @media (max-width: 600px) {\n    margin-top: -25px;\n  }\n`;\n_c2 = RollDisplayContainer;\nconst RollDisplayContainer2 = styled.div`\n  height: 280px;\n  animation-name: ${rollAnimation};\n  animation-iteration-count: 4;\n  animation-duration: 0.15s;\n\n  @media (max-width: 600px) {\n    margin-top: -25px;\n  }\n`;\n_c3 = RollDisplayContainer2;\nconst DiceNumberContainer = styled.div`\n  width: 50px;\n  position: relative;\n  top: -60%;\n  left: calc(50% - 25px);\n  text-align: center;\n`;\n_c4 = DiceNumberContainer;\nconst DiceNumber = styled.p`\n  font-family: \"Dosis\";\n  font-size: 2.8em;\n  text-align: center;\n  z-index: 1;\n  user-select: none;\n  -webkit-user-select: none;\n  cursor: pointer;\n`;\n_c5 = DiceNumber;\nconst DiceRollButtonContainer = styled.div`\n  min-height: 85px;\n  width: 50%;\n  max-width: 800px;\n  margin: 0 auto;\n  display: flex;\n  flex-flow: wrap;\n\n  @media (max-width: 1100px) {\n    width: 65%;\n  }\n\n  @media (max-width: 900px) {\n    width: 85%;\n  }\n\n  @media (max-width: 600px) {\n    width: 85%;\n  }\n`;\n_c6 = DiceRollButtonContainer;\nconst CenterAlingDiv = styled.div`\n  width: 100%;\n  text-align: center;\n\n  @media (max-width: 600px) {\n    margin-top: -25px;\n  }\n`;\n_c7 = CenterAlingDiv;\n\nconst DiceRoller = () => {\n  _s();\n\n  const [rolled, setRolled] = useState(\"R\");\n  const [type, setType] = useState(20);\n  const [rollCount, setRollCount] = useState(0);\n  const [rollsTotal, setRollsTotal] = useState(0);\n  const [lastRolledType, setLastRolledType] = useState(\"D20\");\n\n  const rollDice = (dice, diceID) => {\n    const roll = Math.floor(Math.random() * dice) + 1;\n    setRolled(roll);\n    setType(dice);\n    setRollCount(rollCount + 1);\n    setRollsTotal(rollsTotal + 1);\n    diceRollResults[diceID].push(roll);\n    setLastRolledType(diceID);\n  };\n\n  const clearRolls = () => {\n    diceRollResults.D4 = [];\n    diceRollResults.D6 = [];\n    diceRollResults.D8 = [];\n    diceRollResults.D10 = [];\n    diceRollResults.D12 = [];\n    diceRollResults.D20 = [];\n    setRolled(\"R\");\n    lastRolledType(\"D20\");\n    setRollCount(0);\n    setType(20);\n    setLastRolledType(0);\n  };\n\n  const init = rollCount => {\n    if (rollCount === 0) {\n      return /*#__PURE__*/_jsxDEV(RollDisplayContainer, {\n        children: [/*#__PURE__*/_jsxDEV(LargeDiceDisplay, {\n          dice: type,\n          rolled: rolled,\n          onClick: () => rollDice(type, `D${type}`)\n        }, rollCount, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DiceNumberContainer, {\n          children: /*#__PURE__*/_jsxDEV(DiceNumber, {\n            onClick: () => rollDice(type),\n            children: rolled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, rollsTotal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (rollCount > 0) {\n      return /*#__PURE__*/_jsxDEV(RollDisplayContainer2, {\n        children: [/*#__PURE__*/_jsxDEV(LargeDiceDisplay, {\n          dice: type,\n          rolled: rolled,\n          onClick: () => rollDice(type, `D${type}`)\n        }, rollCount, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DiceNumberContainer, {\n          children: /*#__PURE__*/_jsxDEV(DiceNumber, {\n            onClick: () => rollDice(type),\n            children: rolled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, rollsTotal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [init(rollsTotal), /*#__PURE__*/_jsxDEV(CenterAlingDiv, {\n      children: /*#__PURE__*/_jsxDEV(DiceRollButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 4,\n          onClick: () => rollDice(4, \"D4\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 6,\n          onClick: () => rollDice(6, \"D6\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 8,\n          onClick: () => rollDice(8, \"D8\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 10,\n          onClick: () => rollDice(10, \"D10\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 12,\n          onClick: () => rollDice(12, \"D12\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 20,\n          onClick: () => rollDice(20, \"D20\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: \"clear\",\n          onClick: () => clearRolls()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RollInfoDisplay, {\n      lastRoll: lastRolledType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DiceRoller, \"b6VapPu4hkLhX75thVD2yD9HyP4=\");\n\n_c8 = DiceRoller;\nexport default DiceRoller;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"RollDisplayContainer\");\n$RefreshReg$(_c3, \"RollDisplayContainer2\");\n$RefreshReg$(_c4, \"DiceNumberContainer\");\n$RefreshReg$(_c5, \"DiceNumber\");\n$RefreshReg$(_c6, \"DiceRollButtonContainer\");\n$RefreshReg$(_c7, \"CenterAlingDiv\");\n$RefreshReg$(_c8, \"DiceRoller\");","map":{"version":3,"sources":["/Users/Agent1/Desktop/rpg-calculator/src/Container/Pages/DiceRoller.js"],"names":["React","useState","styled","keyframes","LargeDiceDisplay","RollButton","RollInfoDisplay","diceRollResults","rollAnimation","Container","div","RollDisplayContainer","RollDisplayContainer2","DiceNumberContainer","DiceNumber","p","DiceRollButtonContainer","CenterAlingDiv","DiceRoller","rolled","setRolled","type","setType","rollCount","setRollCount","rollsTotal","setRollsTotal","lastRolledType","setLastRolledType","rollDice","dice","diceID","roll","Math","floor","random","push","clearRolls","D4","D6","D8","D10","D12","D20","init"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport LargeDiceDisplay from \"../../Componets/DiceDisplay\";\nimport RollButton from \"../../Buttons/DiceButtons/RollButtons\";\nimport RollInfoDisplay from \"../../Componets/RollInfoDisplay\";\nimport diceRollResults from \"../../Logic/diceRollResults\";\n\nconst rollAnimation = keyframes`\n 0%\n  {\n    transform: rotate(0deg);\n  }\n  25%\n  {\n    transform: rotate(45deg);\n  }\n  50%\n  {\n    transform: rotate(-110deg)\n  }\n  75%\n  {\n    transform: rotate(120deg);\n  }\n  100%\n  {\n    transform: rotate(0deg);\n  }\n`;\n\nconst Container = styled.div`\n  overflow-y: scroll;\n`;\n\nconst RollDisplayContainer = styled.div`\n  height: 280px;\n  @media (max-width: 600px) {\n    margin-top: -25px;\n  }\n`;\n\nconst RollDisplayContainer2 = styled.div`\n  height: 280px;\n  animation-name: ${rollAnimation};\n  animation-iteration-count: 4;\n  animation-duration: 0.15s;\n\n  @media (max-width: 600px) {\n    margin-top: -25px;\n  }\n`;\n\nconst DiceNumberContainer = styled.div`\n  width: 50px;\n  position: relative;\n  top: -60%;\n  left: calc(50% - 25px);\n  text-align: center;\n`;\n\nconst DiceNumber = styled.p`\n  font-family: \"Dosis\";\n  font-size: 2.8em;\n  text-align: center;\n  z-index: 1;\n  user-select: none;\n  -webkit-user-select: none;\n  cursor: pointer;\n`;\n\nconst DiceRollButtonContainer = styled.div`\n  min-height: 85px;\n  width: 50%;\n  max-width: 800px;\n  margin: 0 auto;\n  display: flex;\n  flex-flow: wrap;\n\n  @media (max-width: 1100px) {\n    width: 65%;\n  }\n\n  @media (max-width: 900px) {\n    width: 85%;\n  }\n\n  @media (max-width: 600px) {\n    width: 85%;\n  }\n`;\n\nconst CenterAlingDiv = styled.div`\n  width: 100%;\n  text-align: center;\n\n  @media (max-width: 600px) {\n    margin-top: -25px;\n  }\n`;\n\nconst DiceRoller = () => {\n  const [rolled, setRolled] = useState(\"R\");\n  const [type, setType] = useState(20);\n  const [rollCount, setRollCount] = useState(0);\n  const [rollsTotal, setRollsTotal] = useState(0);\n  const [lastRolledType, setLastRolledType] = useState(\"D20\");\n\n  const rollDice = (dice, diceID) => {\n    const roll = Math.floor(Math.random() * dice) + 1;\n    setRolled(roll);\n    setType(dice);\n    setRollCount(rollCount + 1);\n    setRollsTotal(rollsTotal + 1);\n    diceRollResults[diceID].push(roll);\n    setLastRolledType(diceID);\n  };\n\n  const clearRolls = () => {\n    diceRollResults.D4 = [];\n    diceRollResults.D6 = [];\n    diceRollResults.D8 = [];\n    diceRollResults.D10 = [];\n    diceRollResults.D12 = [];\n    diceRollResults.D20 = [];\n    setRolled(\"R\");\n    lastRolledType(\"D20\");\n    setRollCount(0);\n    setType(20);\n    setLastRolledType(0);\n  };\n\n  const init = (rollCount) => {\n    if (rollCount === 0) {\n      return (\n        <RollDisplayContainer key={rollsTotal}>\n          <LargeDiceDisplay\n            key={rollCount}\n            dice={type}\n            rolled={rolled}\n            onClick={() => rollDice(type, `D${type}`)}\n          />\n          <DiceNumberContainer>\n            <DiceNumber onClick={() => rollDice(type)}>{rolled}</DiceNumber>\n          </DiceNumberContainer>\n        </RollDisplayContainer>\n      );\n    }\n    if (rollCount > 0) {\n      return (\n        <RollDisplayContainer2 key={rollsTotal}>\n          <LargeDiceDisplay\n            key={rollCount}\n            dice={type}\n            rolled={rolled}\n            onClick={() => rollDice(type, `D${type}`)}\n          />\n          <DiceNumberContainer>\n            <DiceNumber onClick={() => rollDice(type)}>{rolled}</DiceNumber>\n          </DiceNumberContainer>\n        </RollDisplayContainer2>\n      );\n    }\n  };\n\n  return (\n    <Container>\n      {init(rollsTotal)}\n      <CenterAlingDiv>\n        <DiceRollButtonContainer>\n          <RollButton dice={4} onClick={() => rollDice(4, \"D4\")} />\n          <RollButton dice={6} onClick={() => rollDice(6, \"D6\")} />\n          <RollButton dice={8} onClick={() => rollDice(8, \"D8\")} />\n          <RollButton dice={10} onClick={() => rollDice(10, \"D10\")} />\n          <RollButton dice={12} onClick={() => rollDice(12, \"D12\")} />\n          <RollButton dice={20} onClick={() => rollDice(20, \"D20\")} />\n          <RollButton dice={\"clear\"} onClick={() => clearRolls()} />\n        </DiceRollButtonContainer>\n      </CenterAlingDiv>\n      <RollInfoDisplay lastRoll={lastRolledType} />\n    </Container>\n  );\n};\n\nexport default DiceRoller;\n"]},"metadata":{},"sourceType":"module"}