{"ast":null,"code":"var _jsxFileName = \"/Users/Agent1/Desktop/rpg-calculator/src/Componets/CharacterSheet/ActionComponets/Attack.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport theme from \"../../../Logic/theme\";\nimport CharacterRollDisplay from \"../ChracterRollDIsplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  primary,\n  secondary,\n  tri,\n  quad,\n  background,\n  primaryColor\n} = theme;\nconst Container = styled.div`\n  width: 95%;\n  margin: 0 auto;\n  overflow: scroll;\n`;\n_c = Container;\nconst Row = styled.div`\n  width: 90%;\n  height: 4.2em;\n  margin: 0 auto;\n  display: flex;\n  border-bottom: 1px solid ${primary};\n`;\n_c2 = Row;\nconst NameBox = styled.div`\n  display: block;\n  text-align: left;\n  margin-left: 1em;\n  min-width: 9em;\n\n  @media (max-width: 600px) {\n    margin-left: 2.2em;\n  }\n`;\n_c3 = NameBox;\nconst Title = styled.p`\n  font-family: \"Dosis\";\n  color: ${primary};\n  font-size: 1.3em;\n  margin-bottom: 1;\n`;\n_c4 = Title;\nconst Type = styled.div`\n  font-size: 0.7em;\n  margin-top: -1.8em;\n  margin-left: 0.5em;\n`;\n_c5 = Type;\nconst RangeBox = styled.div`\n  margin-top: 1.2em;\n  width: 2em;\n  @media (max-width: 600px) {\n    margin-left: 0.1em;\n  }\n`;\n_c6 = RangeBox;\nconst Range = styled.p`\n  font-size: 0.8em;\n  font-weight: bold;\n  text-align: left;\n`;\n_c7 = Range;\nconst RollBox = styled.div`\n  border: 2px solid ${primary};\n  border-radius: 5px;\n  min-width: 2em;\n  height: 2em;\n  margin-top: 1.3em;\n  margin-left: 1.5em;\n  :hover {\n    cursor: pointer;\n    background-color: ${secondary};\n  }\n`;\n_c8 = RollBox;\nconst BoxP = styled.p`\n  font-family: \"Dosis\";\n  margin-top: 0.35em;\n  color: ${background};\n`;\n_c9 = BoxP;\n\nconst Attack = _ref => {\n  _s();\n\n  let {\n    attacks\n  } = _ref;\n  const [lastRoll, setLastRoll] = useState(\"\");\n  const [lastRoll2, setLastRoll2] = useState(\"\");\n  const [numOfRoll, setNumofRoll] = useState(0);\n\n  const rollDC = (name, mod) => {\n    const roll = Math.floor(Math.random() * 20) + 1;\n\n    const str = () => {\n      if (mod > 0) {\n        setLastRoll(`${name} to hit`);\n        setLastRoll2(`Roll ${roll} + DC ${mod} = ${roll + mod}`);\n      }\n\n      if (mod < 0) {\n        setLastRoll(`${name} to hit`);\n        setLastRoll2(`Roll ${roll} - DC ${mod} = ${roll + mod}`);\n      }\n\n      if (mod = 0) {\n        setLastRoll(`${name} to hit: Roll ${roll}`);\n        setLastRoll2(\"\");\n      }\n    };\n\n    str();\n    setNumofRoll(numOfRoll + 1);\n  };\n\n  const clear = () => {\n    setLastRoll(\"\");\n    setLastRoll2(\"\");\n    setNumofRoll(0);\n  };\n\n  const renderedItems = attacks.map(attacks => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(NameBox, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: attacks.name\n        }, attacks.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Type, {\n          children: attacks.type\n        }, `${attacks.type}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, `${attacks.name} name box`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RangeBox, {\n        children: /*#__PURE__*/_jsxDEV(Range, {\n          children: [attacks.range, \"ft.\"]\n        }, `${attacks.name} range`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, `${attacks.name} range box`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RollBox, {\n        onClick: () => rollDC(attacks.name, attacks.hit),\n        children: /*#__PURE__*/_jsxDEV(BoxP, {\n          children: [\"+\", attacks.hit]\n        }, `${attacks.name} ${attacks.hit}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, `${attacks.name} ${attacks.hit} box`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, `${attacks.name} row`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: renderedItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CharacterRollDisplay, {\n      check: lastRoll,\n      check2: lastRoll2,\n      num: numOfRoll,\n      onClick: () => clear\n    }, \"Attack Roll Display\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Attack, \"7PhMMMqm2oQEV2U6y9AIAQDi62E=\");\n\n_c10 = Attack;\nexport default Attack;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"NameBox\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Type\");\n$RefreshReg$(_c6, \"RangeBox\");\n$RefreshReg$(_c7, \"Range\");\n$RefreshReg$(_c8, \"RollBox\");\n$RefreshReg$(_c9, \"BoxP\");\n$RefreshReg$(_c10, \"Attack\");","map":{"version":3,"sources":["/Users/Agent1/Desktop/rpg-calculator/src/Componets/CharacterSheet/ActionComponets/Attack.js"],"names":["React","useState","styled","theme","CharacterRollDisplay","primary","secondary","tri","quad","background","primaryColor","Container","div","Row","NameBox","Title","p","Type","RangeBox","Range","RollBox","BoxP","Attack","attacks","lastRoll","setLastRoll","lastRoll2","setLastRoll2","numOfRoll","setNumofRoll","rollDC","name","mod","roll","Math","floor","random","str","clear","renderedItems","map","type","range","hit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport theme from \"../../../Logic/theme\";\nimport CharacterRollDisplay from \"../ChracterRollDIsplay\";\n\nconst { primary, secondary, tri, quad, background, primaryColor } = theme;\n\nconst Container = styled.div`\n  width: 95%;\n  margin: 0 auto;\n  overflow: scroll;\n`;\n\nconst Row = styled.div`\n  width: 90%;\n  height: 4.2em;\n  margin: 0 auto;\n  display: flex;\n  border-bottom: 1px solid ${primary};\n`;\n\nconst NameBox = styled.div`\n  display: block;\n  text-align: left;\n  margin-left: 1em;\n  min-width: 9em;\n\n  @media (max-width: 600px) {\n    margin-left: 2.2em;\n  }\n`;\n\nconst Title = styled.p`\n  font-family: \"Dosis\";\n  color: ${primary};\n  font-size: 1.3em;\n  margin-bottom: 1;\n`;\n\nconst Type = styled.div`\n  font-size: 0.7em;\n  margin-top: -1.8em;\n  margin-left: 0.5em;\n`;\n\nconst RangeBox = styled.div`\n  margin-top: 1.2em;\n  width: 2em;\n  @media (max-width: 600px) {\n    margin-left: 0.1em;\n  }\n`;\n\nconst Range = styled.p`\n  font-size: 0.8em;\n  font-weight: bold;\n  text-align: left;\n`;\n\nconst RollBox = styled.div`\n  border: 2px solid ${primary};\n  border-radius: 5px;\n  min-width: 2em;\n  height: 2em;\n  margin-top: 1.3em;\n  margin-left: 1.5em;\n  :hover {\n    cursor: pointer;\n    background-color: ${secondary};\n  }\n`;\n\nconst BoxP = styled.p`\n  font-family: \"Dosis\";\n  margin-top: 0.35em;\n  color: ${background};\n`;\n\nconst Attack = ({ attacks }) => {\n  const [lastRoll, setLastRoll] = useState(\"\");\n  const [lastRoll2, setLastRoll2] = useState(\"\");\n  const [numOfRoll, setNumofRoll] = useState(0);\n\n  const rollDC = (name, mod) => {\n    const roll = Math.floor(Math.random() * 20) + 1;\n    const str = () => {\n      if (mod > 0) {\n        setLastRoll(`${name} to hit`);\n        setLastRoll2(`Roll ${roll} + DC ${mod} = ${roll + mod}`);\n      }\n      if (mod < 0) {\n        setLastRoll(`${name} to hit`);\n        setLastRoll2(`Roll ${roll} - DC ${mod} = ${roll + mod}`);\n      }\n      if ((mod = 0)) {\n        setLastRoll(`${name} to hit: Roll ${roll}`);\n        setLastRoll2(\"\");\n      }\n    };\n    str();\n    setNumofRoll(numOfRoll + 1);\n  };\n\n  const clear = () => {\n    setLastRoll(\"\");\n    setLastRoll2(\"\");\n    setNumofRoll(0);\n  };\n\n  const renderedItems = attacks.map((attacks) => {\n    return (\n      <Row key={`${attacks.name} row`}>\n        <NameBox key={`${attacks.name} name box`}>\n          <Title key={attacks.name}>{attacks.name}</Title>\n          <Type key={`${attacks.type}`}>{attacks.type}</Type>\n        </NameBox>\n        <RangeBox key={`${attacks.name} range box`}>\n          <Range key={`${attacks.name} range`}>{attacks.range}ft.</Range>\n        </RangeBox>\n        <RollBox\n          onClick={() => rollDC(attacks.name, attacks.hit)}\n          key={`${attacks.name} ${attacks.hit} box`}\n        >\n          <BoxP key={`${attacks.name} ${attacks.hit}`}>+{attacks.hit}</BoxP>\n        </RollBox>\n      </Row>\n    );\n  });\n  return (\n    <React.Fragment>\n      <Container>{renderedItems}</Container>\n      <CharacterRollDisplay\n        key=\"Attack Roll Display\"\n        check={lastRoll}\n        check2={lastRoll2}\n        num={numOfRoll}\n        onClick={() => clear}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Attack;\n"]},"metadata":{},"sourceType":"module"}