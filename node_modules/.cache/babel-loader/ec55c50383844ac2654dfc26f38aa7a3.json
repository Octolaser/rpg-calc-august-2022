{"ast":null,"code":"var _jsxFileName = \"/Users/Agent1/Desktop/rpg-claculator/src/Container/Pages/DiceRoller.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport LargeDiceDisplay from \"../../Componets/DiceDisplay\";\nimport RollButton from \"../../Buttons/DiceButtons/RollButton\";\nimport RollInfoDisplay from \"../../Componets/RollInfoDisplay\";\nimport DiceRollResults from \"../../Logic/DiceRollResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RollDisplayContainer = styled.div`\n  height: 280px;\n`;\n_c = RollDisplayContainer;\nconst DiceNumberContainer = styled.div`\n  width: 50px;\n  position: relative;\n  top: -60%;\n  left: calc(50% - 25px);\n  text-align: center;\n`;\n_c2 = DiceNumberContainer;\nconst DiceNumber = styled.p`\n  font-family: \"Dosis\";\n  font-size: 2.8em;\n  text-align: center;\n  z-index: 1;\n  user-select: none;\n  -webkit-user-select: none;\n  cursor: pointer;\n`;\n_c3 = DiceNumber;\nconst DiceRollButtonContainer = styled.div`\n  height: 85px;\n  width: 40%;\n  margin: 0 auto;\n  display: flex;\n\n  @media (max-width: 900px) {\n    width: 70%;\n  }\n\n  @media (max-width: 600px) {\n    width: 96%;\n  }\n`;\n_c4 = DiceRollButtonContainer;\nconst CenterAlingDiv = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n_c5 = CenterAlingDiv;\n\nclass DiceRoller extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      rolled: \"R\",\n      type: 20,\n      results: DiceRollResults\n    };\n\n    this.rollDice = dice => {\n      let diceID = `D${dice}`;\n      this.setState({\n        rolled: Math.floor(Math.random() * dice) + 1\n      });\n      this.setState({\n        type: dice\n      });\n      this.state.results.diceID;\n      console.log(this.state.results);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(RollDisplayContainer, {\n        children: [/*#__PURE__*/_jsxDEV(LargeDiceDisplay, {\n          dice: this.state.type,\n          rolled: this.state.rolled,\n          onClick: () => this.rollDice(this.state.type)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DiceNumberContainer, {\n          children: /*#__PURE__*/_jsxDEV(DiceNumber, {\n            onClick: () => this.rollDice(this.state.type),\n            children: this.state.rolled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CenterAlingDiv, {\n        children: /*#__PURE__*/_jsxDEV(DiceRollButtonContainer, {\n          children: [/*#__PURE__*/_jsxDEV(RollButton, {\n            dice: 4,\n            onClick: () => this.rollDice(4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n            dice: 6,\n            onClick: () => this.rollDice(6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n            dice: 8,\n            onClick: () => this.rollDice(8)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n            dice: 12,\n            onClick: () => this.rollDice(12)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n            dice: 20,\n            onClick: () => this.rollDice(20)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RollInfoDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DiceRoller;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"RollDisplayContainer\");\n$RefreshReg$(_c2, \"DiceNumberContainer\");\n$RefreshReg$(_c3, \"DiceNumber\");\n$RefreshReg$(_c4, \"DiceRollButtonContainer\");\n$RefreshReg$(_c5, \"CenterAlingDiv\");","map":{"version":3,"sources":["/Users/Agent1/Desktop/rpg-claculator/src/Container/Pages/DiceRoller.js"],"names":["React","styled","LargeDiceDisplay","RollButton","RollInfoDisplay","DiceRollResults","RollDisplayContainer","div","DiceNumberContainer","DiceNumber","p","DiceRollButtonContainer","CenterAlingDiv","DiceRoller","Component","state","rolled","type","results","rollDice","dice","diceID","setState","Math","floor","random","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport LargeDiceDisplay from \"../../Componets/DiceDisplay\";\nimport RollButton from \"../../Buttons/DiceButtons/RollButton\";\nimport RollInfoDisplay from \"../../Componets/RollInfoDisplay\";\nimport DiceRollResults from \"../../Logic/DiceRollResults\";\n\nconst RollDisplayContainer = styled.div`\n  height: 280px;\n`;\n\nconst DiceNumberContainer = styled.div`\n  width: 50px;\n  position: relative;\n  top: -60%;\n  left: calc(50% - 25px);\n  text-align: center;\n`;\n\nconst DiceNumber = styled.p`\n  font-family: \"Dosis\";\n  font-size: 2.8em;\n  text-align: center;\n  z-index: 1;\n  user-select: none;\n  -webkit-user-select: none;\n  cursor: pointer;\n`;\n\nconst DiceRollButtonContainer = styled.div`\n  height: 85px;\n  width: 40%;\n  margin: 0 auto;\n  display: flex;\n\n  @media (max-width: 900px) {\n    width: 70%;\n  }\n\n  @media (max-width: 600px) {\n    width: 96%;\n  }\n`;\n\nconst CenterAlingDiv = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nclass DiceRoller extends React.Component {\n  state = { rolled: \"R\", type: 20, results: DiceRollResults };\n\n  rollDice = (dice) => {\n    let diceID = `D${dice}`;\n\n    this.setState({ rolled: Math.floor(Math.random() * dice) + 1 });\n    this.setState({ type: dice });\n    this.state.results.diceID;\n\n    console.log(this.state.results);\n  };\n\n  render() {\n    return (\n      <div>\n        <RollDisplayContainer>\n          <LargeDiceDisplay\n            dice={this.state.type}\n            rolled={this.state.rolled}\n            onClick={() => this.rollDice(this.state.type)}\n          />\n          <DiceNumberContainer>\n            <DiceNumber onClick={() => this.rollDice(this.state.type)}>\n              {this.state.rolled}\n            </DiceNumber>\n          </DiceNumberContainer>\n        </RollDisplayContainer>\n        <CenterAlingDiv>\n          <DiceRollButtonContainer>\n            <RollButton dice={4} onClick={() => this.rollDice(4)} />\n            <RollButton dice={6} onClick={() => this.rollDice(6)} />\n            <RollButton dice={8} onClick={() => this.rollDice(8)} />\n            <RollButton dice={12} onClick={() => this.rollDice(12)} />\n            <RollButton dice={20} onClick={() => this.rollDice(20)} />\n          </DiceRollButtonContainer>\n        </CenterAlingDiv>\n        <RollInfoDisplay />\n      </div>\n    );\n  }\n}\n\nexport default DiceRoller;\n"]},"metadata":{},"sourceType":"module"}