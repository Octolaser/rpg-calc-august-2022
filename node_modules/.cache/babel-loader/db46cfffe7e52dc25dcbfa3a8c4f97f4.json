{"ast":null,"code":"var _jsxFileName = \"/Users/Agent1/Desktop/rpg-calculator/src/Container/Pages/DiceRoller.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport LargeDiceDisplay from \"../../Componets/DiceDisplay\";\nimport RollButton from \"../../Buttons/DiceButtons/RollButtons\";\nimport RollInfoDisplay from \"../../Componets/RollInfoDisplay\";\nimport diceRollResults from \"../../Logic/diceRollResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rollAnimation = keyframes`\n 0%\n  {\n    transform: rotate(0deg);\n  }\n  25%\n  {\n    transform: rotate(45deg);\n  }\n  50%\n  {\n    transform: rotate(-60deg)\n  }\n  75%\n  {\n    transform: rotate(120deg);\n  }\n  100%\n  {\n    transform: rotate(0deg);\n  }\n`;\nconst Container = styled.div`\n  overflow-y: scroll;\n`;\n_c = Container;\nconst RollDisplayContainer = styled.div`\n  height: 280px;\n  animation-name: ${rollAnimation};\n  animation-iteration-count: 4;\n  animation-duration: 0.15s;\n\n  @media (max-width: 600px) {\n    margin-top: -25px;\n  }\n`;\n_c2 = RollDisplayContainer;\nconst DiceNumberContainer = styled.div`\n  width: 50px;\n  position: relative;\n  top: -60%;\n  left: calc(50% - 25px);\n  text-align: center;\n`;\n_c3 = DiceNumberContainer;\nconst DiceNumber = styled.p`\n  font-family: \"Dosis\";\n  font-size: 2.8em;\n  text-align: center;\n  z-index: 1;\n  user-select: none;\n  -webkit-user-select: none;\n  cursor: pointer;\n`;\n_c4 = DiceNumber;\nconst DiceRollButtonContainer = styled.div`\n  min-height: 85px;\n  width: 50%;\n  max-width: 800px;\n  margin: 0 auto;\n  display: flex;\n  flex-flow: wrap;\n\n  @media (max-width: 1100px) {\n    width: 65%;\n  }\n\n  @media (max-width: 900px) {\n    width: 85%;\n  }\n\n  @media (max-width: 600px) {\n    width: 85%;\n  }\n`;\n_c5 = DiceRollButtonContainer;\nconst CenterAlingDiv = styled.div`\n  width: 100%;\n  text-align: center;\n\n  @media (max-width: 600px) {\n    margin-top: -25px;\n  }\n`;\n_c6 = CenterAlingDiv;\n\nconst DiceRoller = () => {\n  _s();\n\n  const [rolled, setRolled] = useState(\"R\");\n  const [type, setType] = useState(20);\n  const [rollCount, setRollCount] = useState(0);\n  const [lastRolledType, setLastRolledType] = useState(\"D20\");\n\n  const rollDice = (dice, diceID) => {\n    const roll = Math.floor(Math.random() * dice) + 1;\n    setRolled(roll);\n    setType(dice);\n    setRollCount(rollCount + 1);\n    diceRollResults[diceID].push(roll);\n    setLastRolledType(diceID);\n  };\n\n  const clearRolls = () => {\n    diceRollResults.D4 = [];\n    diceRollResults.D6 = [];\n    diceRollResults.D8 = [];\n    diceRollResults.D10 = [];\n    diceRollResults.D12 = [];\n    diceRollResults.D20 = [];\n    setRolled(\"R\");\n    lastRolledType(\"D20\");\n    setRollCount(0);\n    setType(20);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(RollDisplayContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LargeDiceDisplay, {\n        dice: type,\n        rolled: rolled,\n        onClick: () => rollDice(type, `D${type}`)\n      }, rollCount, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiceNumberContainer, {\n        children: /*#__PURE__*/_jsxDEV(DiceNumber, {\n          onClick: () => rollDice(type),\n          children: rolled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CenterAlingDiv, {\n      children: /*#__PURE__*/_jsxDEV(DiceRollButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 4,\n          onClick: () => rollDice(4, \"D4\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 6,\n          onClick: () => rollDice(6, \"D6\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 8,\n          onClick: () => rollDice(8, \"D8\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 10,\n          onClick: () => rollDice(10, \"D10\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 12,\n          onClick: () => rollDice(12, \"D12\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 20,\n          onClick: () => rollDice(20, \"D20\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: \"clear\",\n          onClick: () => clearRolls()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RollInfoDisplay, {\n      lastRoll: lastRolledType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DiceRoller, \"QiL1U4ezbpYPkZQSYEE+cV5awcM=\");\n\n_c7 = DiceRoller;\nexport default DiceRoller;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"RollDisplayContainer\");\n$RefreshReg$(_c3, \"DiceNumberContainer\");\n$RefreshReg$(_c4, \"DiceNumber\");\n$RefreshReg$(_c5, \"DiceRollButtonContainer\");\n$RefreshReg$(_c6, \"CenterAlingDiv\");\n$RefreshReg$(_c7, \"DiceRoller\");","map":{"version":3,"sources":["/Users/Agent1/Desktop/rpg-calculator/src/Container/Pages/DiceRoller.js"],"names":["React","useState","styled","keyframes","LargeDiceDisplay","RollButton","RollInfoDisplay","diceRollResults","rollAnimation","Container","div","RollDisplayContainer","DiceNumberContainer","DiceNumber","p","DiceRollButtonContainer","CenterAlingDiv","DiceRoller","rolled","setRolled","type","setType","rollCount","setRollCount","lastRolledType","setLastRolledType","rollDice","dice","diceID","roll","Math","floor","random","push","clearRolls","D4","D6","D8","D10","D12","D20"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;AAEA,MAAMC,aAAa,GAAGL,SAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;AAuBA,MAAMM,SAAS,GAAGP,MAAM,CAACQ,GAAI;AAC7B;AACA,CAFA;KAAMD,S;AAIN,MAAME,oBAAoB,GAAGT,MAAM,CAACQ,GAAI;AACxC;AACA,oBAAoBF,aAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMG,oB;AAWN,MAAMC,mBAAmB,GAAGV,MAAM,CAACQ,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA,CANA;MAAME,mB;AAQN,MAAMC,UAAU,GAAGX,MAAM,CAACY,CAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,U;AAUN,MAAME,uBAAuB,GAAGb,MAAM,CAACQ,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;MAAMK,uB;AAqBN,MAAMC,cAAc,GAAGd,MAAM,CAACQ,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMM,c;;AASN,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACuB,cAAD,EAAiBC,iBAAjB,IAAsCxB,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMyB,QAAQ,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACjC,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,IAA3B,IAAmC,CAAhD;AACAR,IAAAA,SAAS,CAACU,IAAD,CAAT;AACAR,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAJ,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACAf,IAAAA,eAAe,CAACqB,MAAD,CAAf,CAAwBK,IAAxB,CAA6BJ,IAA7B;AACAJ,IAAAA,iBAAiB,CAACG,MAAD,CAAjB;AACD,GAPD;;AASA,QAAMM,UAAU,GAAG,MAAM;AACvB3B,IAAAA,eAAe,CAAC4B,EAAhB,GAAqB,EAArB;AACA5B,IAAAA,eAAe,CAAC6B,EAAhB,GAAqB,EAArB;AACA7B,IAAAA,eAAe,CAAC8B,EAAhB,GAAqB,EAArB;AACA9B,IAAAA,eAAe,CAAC+B,GAAhB,GAAsB,EAAtB;AACA/B,IAAAA,eAAe,CAACgC,GAAhB,GAAsB,EAAtB;AACAhC,IAAAA,eAAe,CAACiC,GAAhB,GAAsB,EAAtB;AACArB,IAAAA,SAAS,CAAC,GAAD,CAAT;AACAK,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAD,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAXD;;AAaA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,oBAAD;AAAA,8BACE,QAAC,gBAAD;AAEE,QAAA,IAAI,EAAED,IAFR;AAGE,QAAA,MAAM,EAAEF,MAHV;AAIE,QAAA,OAAO,EAAE,MAAMQ,QAAQ,CAACN,IAAD,EAAQ,IAAGA,IAAK,EAAhB;AAJzB,SACOE,SADP;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,mBAAD;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAMI,QAAQ,CAACN,IAAD,CAAnC;AAAA,oBAA4CF;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,cAAD;AAAA,6BACE,QAAC,uBAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAE,CAAlB;AAAqB,UAAA,OAAO,EAAE,MAAMQ,QAAQ,CAAC,CAAD,EAAI,IAAJ;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAE,CAAlB;AAAqB,UAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,CAAD,EAAI,IAAJ;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAE,CAAlB;AAAqB,UAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,CAAD,EAAI,IAAJ;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAE,EAAlB;AAAsB,UAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,EAAD,EAAK,KAAL;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAE,EAAlB;AAAsB,UAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,EAAD,EAAK,KAAL;AAA7C;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,UAAD;AAAY,UAAA,IAAI,EAAE,EAAlB;AAAsB,UAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,EAAD,EAAK,KAAL;AAA7C;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAE,OAAlB;AAA2B,UAAA,OAAO,EAAE,MAAMQ,UAAU;AAApD;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAuBE,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEV;AAA3B;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAvDD;;GAAMP,U;;MAAAA,U;AAyDN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport LargeDiceDisplay from \"../../Componets/DiceDisplay\";\nimport RollButton from \"../../Buttons/DiceButtons/RollButtons\";\nimport RollInfoDisplay from \"../../Componets/RollInfoDisplay\";\nimport diceRollResults from \"../../Logic/diceRollResults\";\n\nconst rollAnimation = keyframes`\n 0%\n  {\n    transform: rotate(0deg);\n  }\n  25%\n  {\n    transform: rotate(45deg);\n  }\n  50%\n  {\n    transform: rotate(-60deg)\n  }\n  75%\n  {\n    transform: rotate(120deg);\n  }\n  100%\n  {\n    transform: rotate(0deg);\n  }\n`;\n\nconst Container = styled.div`\n  overflow-y: scroll;\n`;\n\nconst RollDisplayContainer = styled.div`\n  height: 280px;\n  animation-name: ${rollAnimation};\n  animation-iteration-count: 4;\n  animation-duration: 0.15s;\n\n  @media (max-width: 600px) {\n    margin-top: -25px;\n  }\n`;\n\nconst DiceNumberContainer = styled.div`\n  width: 50px;\n  position: relative;\n  top: -60%;\n  left: calc(50% - 25px);\n  text-align: center;\n`;\n\nconst DiceNumber = styled.p`\n  font-family: \"Dosis\";\n  font-size: 2.8em;\n  text-align: center;\n  z-index: 1;\n  user-select: none;\n  -webkit-user-select: none;\n  cursor: pointer;\n`;\n\nconst DiceRollButtonContainer = styled.div`\n  min-height: 85px;\n  width: 50%;\n  max-width: 800px;\n  margin: 0 auto;\n  display: flex;\n  flex-flow: wrap;\n\n  @media (max-width: 1100px) {\n    width: 65%;\n  }\n\n  @media (max-width: 900px) {\n    width: 85%;\n  }\n\n  @media (max-width: 600px) {\n    width: 85%;\n  }\n`;\n\nconst CenterAlingDiv = styled.div`\n  width: 100%;\n  text-align: center;\n\n  @media (max-width: 600px) {\n    margin-top: -25px;\n  }\n`;\n\nconst DiceRoller = () => {\n  const [rolled, setRolled] = useState(\"R\");\n  const [type, setType] = useState(20);\n  const [rollCount, setRollCount] = useState(0);\n  const [lastRolledType, setLastRolledType] = useState(\"D20\");\n\n  const rollDice = (dice, diceID) => {\n    const roll = Math.floor(Math.random() * dice) + 1;\n    setRolled(roll);\n    setType(dice);\n    setRollCount(rollCount + 1);\n    diceRollResults[diceID].push(roll);\n    setLastRolledType(diceID);\n  };\n\n  const clearRolls = () => {\n    diceRollResults.D4 = [];\n    diceRollResults.D6 = [];\n    diceRollResults.D8 = [];\n    diceRollResults.D10 = [];\n    diceRollResults.D12 = [];\n    diceRollResults.D20 = [];\n    setRolled(\"R\");\n    lastRolledType(\"D20\");\n    setRollCount(0);\n    setType(20);\n  };\n\n  return (\n    <Container>\n      <RollDisplayContainer>\n        <LargeDiceDisplay\n          key={rollCount}\n          dice={type}\n          rolled={rolled}\n          onClick={() => rollDice(type, `D${type}`)}\n        />\n        <DiceNumberContainer>\n          <DiceNumber onClick={() => rollDice(type)}>{rolled}</DiceNumber>\n        </DiceNumberContainer>\n      </RollDisplayContainer>\n      <CenterAlingDiv>\n        <DiceRollButtonContainer>\n          <RollButton dice={4} onClick={() => rollDice(4, \"D4\")} />\n          <RollButton dice={6} onClick={() => rollDice(6, \"D6\")} />\n          <RollButton dice={8} onClick={() => rollDice(8, \"D8\")} />\n          <RollButton dice={10} onClick={() => rollDice(10, \"D10\")} />\n          <RollButton dice={12} onClick={() => rollDice(12, \"D12\")} />\n          <RollButton dice={20} onClick={() => rollDice(20, \"D20\")} />\n          <RollButton dice={\"clear\"} onClick={() => clearRolls()} />\n        </DiceRollButtonContainer>\n      </CenterAlingDiv>\n      <RollInfoDisplay lastRoll={lastRolledType} />\n    </Container>\n  );\n};\n\nexport default DiceRoller;\n"]},"metadata":{},"sourceType":"module"}