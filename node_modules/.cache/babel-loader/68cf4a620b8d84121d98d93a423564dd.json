{"ast":null,"code":"var _jsxFileName = \"/Users/Agent1/Desktop/rpg-calculator/src/Componets/CharacterSheet/SaveRolls.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport theme from \"../../Logic/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  primary,\n  secondary,\n  tri,\n  quad,\n  background,\n  primaryColor\n} = theme;\nconst Container = styled.div`\n  width: calc(100% - 0.35em);\n  margin-left: 0.5em;\n  height: 6.5em;\n  grid-area: save;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  row-gap: 0.25em;\n`;\n_c = Container;\nconst SaveContainer = styled.div`\n  width: 11em;\n  height: 2.5em;\n  background-color: #fff;\n  border: solid 3px ${primary};\n  border-radius: 5px;\n  display: flex;\n  justify-content: space-evenly;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${secondary};\n  }\n`;\n_c2 = SaveContainer;\nconst IsPro = styled.div`\n  width: 0.5em;\n  height: 0.5em;\n  margin-top: 1em;\n  border: 1.5px solid ${quad};\n  border-radius: 25px;\n  background-color: ${tri};\n`;\n_c3 = IsPro;\nconst NotPro = styled.div`\n  width: 0.5em;\n  height: 0.5em;\n  margin-top: 1em;\n  border: 2px solid ${quad};\n  border-radius: 25px;\n  background-color: none;\n`;\n_c4 = NotPro;\nconst StyledP = styled.p`\n  font-family: \"Dosis\";\n  font-size: 1.1em;\n  color: ${background};\n  margin-top: 0.45em;\n`;\n_c5 = StyledP;\n\nconst SaveRolls = _ref => {\n  _s();\n\n  let {\n    saves\n  } = _ref;\n  const [lastRoll, setLastRoll] = useState(\"\");\n  const [numOfRoll, setNumofRoll] = useState(\"\");\n\n  const saveCheck = (name, mod) => {\n    const roll = Math.floor(Math.random() * 20) + 1;\n\n    const str = () => {\n      if (mod >= 0) {\n        return `${name.slice(0, 3)} Check: Roll ${roll} + Mod ${mod} = ${roll + mod}`;\n      }\n\n      if (mod < 0) {\n        return `${name.slice(0, 3)} Check: Roll ${roll} - Mod ${mod.toString().substring(1)} = ${roll + mod}`;\n      }\n    };\n\n    setLastRoll(str());\n    setNumofRoll(numOfRoll + 1);\n  };\n\n  const clear = () => {\n    setLastRoll(\"\");\n    setNumofRoll(0);\n  };\n\n  const renderedSaves = saves.map(saves => {\n    return /*#__PURE__*/_jsxDEV(SaveContainer, {\n      children: [saves.pro ? /*#__PURE__*/_jsxDEV(IsPro, {}, `${saves.name} is pro`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(NotPro, {}, `${saves.name} is not pro`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: `${saves.name.slice(0, 3).toUpperCase()}\\u0002 save`\n      }, `${saves.name} label`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: saves.save\n      }, `${saves.name} mod`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, `${saves.name} save roll container`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: renderedSaves\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n\n_s(SaveRolls, \"l5JRZlM4ox+tpA/WrU2MBsBM9Sg=\");\n\n_c6 = SaveRolls;\nexport default SaveRolls;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SaveContainer\");\n$RefreshReg$(_c3, \"IsPro\");\n$RefreshReg$(_c4, \"NotPro\");\n$RefreshReg$(_c5, \"StyledP\");\n$RefreshReg$(_c6, \"SaveRolls\");","map":{"version":3,"sources":["/Users/Agent1/Desktop/rpg-calculator/src/Componets/CharacterSheet/SaveRolls.js"],"names":["react","useState","styled","theme","primary","secondary","tri","quad","background","primaryColor","Container","div","SaveContainer","IsPro","NotPro","StyledP","p","SaveRolls","saves","lastRoll","setLastRoll","numOfRoll","setNumofRoll","saveCheck","name","mod","roll","Math","floor","random","str","slice","toString","substring","clear","renderedSaves","map","pro","toUpperCase","save"],"mappings":"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","sourcesContent":["import react, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport theme from \"../../Logic/theme\";\n\nconst { primary, secondary, tri, quad, background, primaryColor } = theme;\n\nconst Container = styled.div`\n  width: calc(100% - 0.35em);\n  margin-left: 0.5em;\n  height: 6.5em;\n  grid-area: save;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  row-gap: 0.25em;\n`;\n\nconst SaveContainer = styled.div`\n  width: 11em;\n  height: 2.5em;\n  background-color: #fff;\n  border: solid 3px ${primary};\n  border-radius: 5px;\n  display: flex;\n  justify-content: space-evenly;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${secondary};\n  }\n`;\n\nconst IsPro = styled.div`\n  width: 0.5em;\n  height: 0.5em;\n  margin-top: 1em;\n  border: 1.5px solid ${quad};\n  border-radius: 25px;\n  background-color: ${tri};\n`;\n\nconst NotPro = styled.div`\n  width: 0.5em;\n  height: 0.5em;\n  margin-top: 1em;\n  border: 2px solid ${quad};\n  border-radius: 25px;\n  background-color: none;\n`;\n\nconst StyledP = styled.p`\n  font-family: \"Dosis\";\n  font-size: 1.1em;\n  color: ${background};\n  margin-top: 0.45em;\n`;\n\nconst SaveRolls = ({ saves }) => {\n  const [lastRoll, setLastRoll] = useState(\"\");\n  const [numOfRoll, setNumofRoll] = useState(\"\");\n\n  const saveCheck = (name, mod) => {\n    const roll = Math.floor(Math.random() * 20) + 1;\n    const str = () => {\n      if (mod >= 0) {\n        return `${name.slice(0, 3)} Check: Roll ${roll} + Mod ${mod} = ${\n          roll + mod\n        }`;\n      }\n      if (mod < 0) {\n        return `${name.slice(0, 3)} Check: Roll ${roll} - Mod ${mod\n          .toString()\n          .substring(1)} = ${roll + mod}`;\n      }\n    };\n    setLastRoll(str());\n    setNumofRoll(numOfRoll + 1);\n  };\n\n  const clear = () => {\n    setLastRoll(\"\");\n    setNumofRoll(0);\n  };\n\n  const renderedSaves = saves.map((saves) => {\n    return (\n      <SaveContainer key={`${saves.name} save roll container`}>\n        {saves.pro ? (\n          <IsPro key={`${saves.name} is pro`} />\n        ) : (\n          <NotPro key={`${saves.name} is not pro`} />\n        )}\n        <StyledP key={`${saves.name} label`}>\n          {`${saves.name.slice(0, 3).toUpperCase()}\\u0002 save`}\n        </StyledP>\n        <StyledP key={`${saves.name} mod`}>{saves.save}</StyledP>\n      </SaveContainer>\n    );\n  });\n  return <Container>{renderedSaves}</Container>;\n};\n\nexport default SaveRolls;\n"]},"metadata":{},"sourceType":"module"}