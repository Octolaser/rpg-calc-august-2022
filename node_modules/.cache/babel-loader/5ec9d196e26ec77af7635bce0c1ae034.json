{"ast":null,"code":"var _jsxFileName = \"/Users/Agent1/Desktop/rpg-claculator/src/Buttons/DiceButtons/RollButton.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport D20 from \"../../Images/Dice/D20Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledD20 = styled(D20)`\n  width: 35px;\n`;\n_c = StyledD20;\n\nconst ButtonShell = _ref => {\n  let {\n    dice\n  } = _ref;\n\n  if (dice === 20) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(StyledD20, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"I am not a button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c2 = ButtonShell;\nexport default ButtonShell;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledD20\");\n$RefreshReg$(_c2, \"ButtonShell\");","map":{"version":3,"sources":["/Users/Agent1/Desktop/rpg-claculator/src/Buttons/DiceButtons/RollButton.js"],"names":["React","styled","D20","StyledD20","ButtonShell","dice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACC,GAAD,CAAM;AAC9B;AACA,CAFA;KAAMC,S;;AAIN,MAAMC,WAAW,GAAG,QAAc;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;;AAChC,MAAIA,IAAI,KAAK,EAAb,EAAiB;AACf,wBACE;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAVD;;MAAMD,W;AAYN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport D20 from \"../../Images/Dice/D20Icon\";\n\nconst StyledD20 = styled(D20)`\n  width: 35px;\n`;\n\nconst ButtonShell = ({ dice }) => {\n  if (dice === 20) {\n    return (\n      <div>\n        <StyledD20 />\n      </div>\n    );\n  } else {\n    return <div>I am not a button</div>;\n  }\n};\n\nexport default ButtonShell;\n"]},"metadata":{},"sourceType":"module"}