{"ast":null,"code":"var _jsxFileName = \"/Users/Agent1/Desktop/rpg-calculator/src/Container/Pages/DiceRoller.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport LargeDiceDisplay from \"../../Componets/DiceDisplay\";\nimport RollButton from \"../../Buttons/DiceButtons/RollButton\";\nimport RollInfoDisplay from \"../../Componets/RollInfoDisplay\";\nimport DiceRollResults from \"../../Logic/DiceRollResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RollDisplayContainer = styled.div`\n  height: 280px;\n`;\n_c = RollDisplayContainer;\nconst DiceNumberContainer = styled.div`\n  width: 50px;\n  position: relative;\n  top: -60%;\n  left: calc(50% - 25px);\n  text-align: center;\n`;\n_c2 = DiceNumberContainer;\nconst DiceNumber = styled.p`\n  font-family: \"Dosis\";\n  font-size: 2.8em;\n  text-align: center;\n  z-index: 1;\n  user-select: none;\n  -webkit-user-select: none;\n  cursor: pointer;\n`;\n_c3 = DiceNumber;\nconst DiceRollButtonContainer = styled.div`\n  height: 85px;\n  width: 40%;\n  margin: 0 auto;\n  display: flex;\n\n  @media (max-width: 900px) {\n    width: 70%;\n  }\n\n  @media (max-width: 600px) {\n    width: 96%;\n  }\n`;\n_c4 = DiceRollButtonContainer;\nconst CenterAlingDiv = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n_c5 = CenterAlingDiv;\n\nconst DiceRoller = () => {\n  state = {\n    rolled: \"R\",\n    type: 20,\n    results: DiceRollResults\n  };\n\n  rollDice = (dice, diceID) => {\n    const roll = Math.floor(Math.random() * dice) + 1;\n    this.setState({\n      rolled: roll\n    });\n    this.setState({\n      type: dice\n    });\n    this.state.results[diceID].push(roll);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RollDisplayContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LargeDiceDisplay, {\n        dice: this.state.type,\n        rolled: this.state.rolled,\n        onClick: () => this.rollDice(this.state.type, `D${this.state.type}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiceNumberContainer, {\n        children: /*#__PURE__*/_jsxDEV(DiceNumber, {\n          onClick: () => this.rollDice(this.state.type),\n          children: this.state.rolled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CenterAlingDiv, {\n      children: /*#__PURE__*/_jsxDEV(DiceRollButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 4,\n          onClick: () => this.rollDice(4, \"D4\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 6,\n          onClick: () => this.rollDice(6, \"D6\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 8,\n          onClick: () => this.rollDice(8, \"D8\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 12,\n          onClick: () => this.rollDice(12, \"D12\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n          dice: 20,\n          onClick: () => this.rollDice(20, \"D20\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RollInfoDisplay, {\n      onClick: () => this.clearRolls()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = DiceRoller;\nexport default DiceRoller;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"RollDisplayContainer\");\n$RefreshReg$(_c2, \"DiceNumberContainer\");\n$RefreshReg$(_c3, \"DiceNumber\");\n$RefreshReg$(_c4, \"DiceRollButtonContainer\");\n$RefreshReg$(_c5, \"CenterAlingDiv\");\n$RefreshReg$(_c6, \"DiceRoller\");","map":{"version":3,"sources":["/Users/Agent1/Desktop/rpg-calculator/src/Container/Pages/DiceRoller.js"],"names":["React","styled","LargeDiceDisplay","RollButton","RollInfoDisplay","DiceRollResults","RollDisplayContainer","div","DiceNumberContainer","DiceNumber","p","DiceRollButtonContainer","CenterAlingDiv","DiceRoller","state","rolled","type","results","rollDice","dice","diceID","roll","Math","floor","random","setState","push","clearRolls"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport LargeDiceDisplay from \"../../Componets/DiceDisplay\";\nimport RollButton from \"../../Buttons/DiceButtons/RollButton\";\nimport RollInfoDisplay from \"../../Componets/RollInfoDisplay\";\nimport DiceRollResults from \"../../Logic/DiceRollResults\";\n\nconst RollDisplayContainer = styled.div`\n  height: 280px;\n`;\n\nconst DiceNumberContainer = styled.div`\n  width: 50px;\n  position: relative;\n  top: -60%;\n  left: calc(50% - 25px);\n  text-align: center;\n`;\n\nconst DiceNumber = styled.p`\n  font-family: \"Dosis\";\n  font-size: 2.8em;\n  text-align: center;\n  z-index: 1;\n  user-select: none;\n  -webkit-user-select: none;\n  cursor: pointer;\n`;\n\nconst DiceRollButtonContainer = styled.div`\n  height: 85px;\n  width: 40%;\n  margin: 0 auto;\n  display: flex;\n\n  @media (max-width: 900px) {\n    width: 70%;\n  }\n\n  @media (max-width: 600px) {\n    width: 96%;\n  }\n`;\n\nconst CenterAlingDiv = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst DiceRoller = () => {\n  state = { rolled: \"R\", type: 20, results: DiceRollResults };\n\n  rollDice = (dice, diceID) => {\n    const roll = Math.floor(Math.random() * dice) + 1;\n    this.setState({ rolled: roll });\n    this.setState({ type: dice });\n    this.state.results[diceID].push(roll);\n  };\n\n  return (\n    <div>\n      <RollDisplayContainer>\n        <LargeDiceDisplay\n          dice={this.state.type}\n          rolled={this.state.rolled}\n          onClick={() => this.rollDice(this.state.type, `D${this.state.type}`)}\n        />\n        <DiceNumberContainer>\n          <DiceNumber onClick={() => this.rollDice(this.state.type)}>\n            {this.state.rolled}\n          </DiceNumber>\n        </DiceNumberContainer>\n      </RollDisplayContainer>\n      <CenterAlingDiv>\n        <DiceRollButtonContainer>\n          <RollButton dice={4} onClick={() => this.rollDice(4, \"D4\")} />\n          <RollButton dice={6} onClick={() => this.rollDice(6, \"D6\")} />\n          <RollButton dice={8} onClick={() => this.rollDice(8, \"D8\")} />\n          <RollButton dice={12} onClick={() => this.rollDice(12, \"D12\")} />\n          <RollButton dice={20} onClick={() => this.rollDice(20, \"D20\")} />\n        </DiceRollButtonContainer>\n      </CenterAlingDiv>\n      <RollInfoDisplay onClick={() => this.clearRolls()} />\n    </div>\n  );\n};\n\nexport default DiceRoller;\n"]},"metadata":{},"sourceType":"module"}