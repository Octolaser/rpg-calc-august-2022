{"ast":null,"code":"var _jsxFileName = \"/Users/Agent1/Desktop/rpg-calculator/src/Componets/CharacterSheet/CharacterHeader.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst primaryColor = \"#662d91\";\nconst secondaryColor = \"#d0bee4\";\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 45px;\n  background-color: ${secondaryColor};\n  border-bottom: 3px solid ${primaryColor};\n`;\n_c = Container;\nconst StyledP = styled.p`\n  margin: 15px 0 0 15px;\n`;\n_c2 = StyledP;\nconst SmallText = styled.p`\n  margin: 20px 0 0 15px;\n  font-size: 0.7em; ;\n`;\n_c3 = SmallText;\n\nconst CharacterHeader = _ref => {\n  let {\n    race,\n    hp,\n    charClass\n  } = _ref;\n\n  const levelTotal = () => {\n    let total = 0;\n    charClass.forEach(e => {\n      total += e.level;\n    });\n    return total;\n  };\n\n  const classBreakdown = () => {\n    let str = \"\";\n    charClass.forEach(e => {\n      str += ` / ${e.class} ${e.level}`;\n    });\n    return str.slice(3);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StyledP, {\n      children: `${race} | Level ${levelTotal()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SmallText, {\n      children: `(${classBreakdown()})`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = CharacterHeader;\nexport default CharacterHeader;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"StyledP\");\n$RefreshReg$(_c3, \"SmallText\");\n$RefreshReg$(_c4, \"CharacterHeader\");","map":{"version":3,"sources":["/Users/Agent1/Desktop/rpg-calculator/src/Componets/CharacterSheet/CharacterHeader.js"],"names":["React","styled","primaryColor","secondaryColor","Container","div","StyledP","p","SmallText","CharacterHeader","race","hp","charClass","levelTotal","total","forEach","e","level","classBreakdown","str","class","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,YAAY,GAAG,SAArB;AACA,MAAMC,cAAc,GAAG,SAAvB;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA,sBAAsBF,cAAe;AACrC,6BAA6BD,YAAa;AAC1C,CANA;KAAME,S;AAQN,MAAME,OAAO,GAAGL,MAAM,CAACM,CAAE;AACzB;AACA,CAFA;MAAMD,O;AAIN,MAAME,SAAS,GAAGP,MAAM,CAACM,CAAE;AAC3B;AACA;AACA,CAHA;MAAMC,S;;AAKN,MAAMC,eAAe,GAAG,QAA6B;AAAA,MAA5B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,EAAR;AAAYC,IAAAA;AAAZ,GAA4B;;AACnD,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIC,KAAK,GAAG,CAAZ;AACAF,IAAAA,SAAS,CAACG,OAAV,CAAmBC,CAAD,IAAO;AACvBF,MAAAA,KAAK,IAAIE,CAAC,CAACC,KAAX;AACD,KAFD;AAGA,WAAOH,KAAP;AACD,GAND;;AAQA,QAAMI,cAAc,GAAG,MAAM;AAC3B,QAAIC,GAAG,GAAG,EAAV;AACAP,IAAAA,SAAS,CAACG,OAAV,CAAmBC,CAAD,IAAO;AACvBG,MAAAA,GAAG,IAAK,MAAKH,CAAC,CAACI,KAAM,IAAGJ,CAAC,CAACC,KAAM,EAAhC;AACD,KAFD;AAGA,WAAOE,GAAG,CAACE,KAAJ,CAAU,CAAV,CAAP;AACD,GAND;;AAOA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,OAAD;AAAA,gBAAW,GAAEX,IAAK,YAAWG,UAAU,EAAG;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,gBAAa,IAAGK,cAAc,EAAG;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtBD;;MAAMT,e;AAwBN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#662d91\";\nconst secondaryColor = \"#d0bee4\";\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 45px;\n  background-color: ${secondaryColor};\n  border-bottom: 3px solid ${primaryColor};\n`;\n\nconst StyledP = styled.p`\n  margin: 15px 0 0 15px;\n`;\n\nconst SmallText = styled.p`\n  margin: 20px 0 0 15px;\n  font-size: 0.7em; ;\n`;\n\nconst CharacterHeader = ({ race, hp, charClass }) => {\n  const levelTotal = () => {\n    let total = 0;\n    charClass.forEach((e) => {\n      total += e.level;\n    });\n    return total;\n  };\n\n  const classBreakdown = () => {\n    let str = \"\";\n    charClass.forEach((e) => {\n      str += ` / ${e.class} ${e.level}`;\n    });\n    return str.slice(3);\n  };\n  return (\n    <Container>\n      <StyledP>{`${race} | Level ${levelTotal()}`}</StyledP>\n      <SmallText>{`(${classBreakdown()})`}</SmallText>\n    </Container>\n  );\n};\n\nexport default CharacterHeader;\n"]},"metadata":{},"sourceType":"module"}