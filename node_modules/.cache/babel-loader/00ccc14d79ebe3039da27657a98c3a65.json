{"ast":null,"code":"var _jsxFileName = \"/Users/Agent1/Desktop/rpg-claculator/src/Buttons/DiceButtons/RollButton.js\";\nimport React from \"react\";\nimport D20 from \"../../Images/Dice/D20Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ButtonShell = props => {\n  if (props === 20) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(D20, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"I am not a button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c = ButtonShell;\nexport default ButtonShell;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonShell\");","map":{"version":3,"sources":["/Users/Agent1/Desktop/rpg-claculator/src/Buttons/DiceButtons/RollButton.js"],"names":["React","D20","ButtonShell","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,MAAIA,KAAK,KAAK,EAAd,EAAkB;AAChB,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BACE;AAAA,+BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARD,MAQO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAZD;;KAAMD,W;AAcN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport D20 from \"../../Images/Dice/D20Icon\";\n\nconst ButtonShell = (props) => {\n  if (props === 20) {\n    return (\n      <React.Fragment>\n        <button>\n          <D20 />\n        </button>\n      </React.Fragment>\n    );\n  } else {\n    return <div>I am not a button</div>;\n  }\n};\n\nexport default ButtonShell;\n"]},"metadata":{},"sourceType":"module"}